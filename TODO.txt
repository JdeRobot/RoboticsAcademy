RoboticsAcademy:

1. Update database:
    1.1 (Done) Differentiate whether a RoboticsBackend noetic or humble is being used. Depending on this, you'll need to launch one template or another
    (RoboticsAcademy/exercises/static/exercises/exercise_name/python_template/ros1_noetic/exercise.py)/
    (RoboticsAcademy/exercises/static/exercises/exercise_name/python_template/ros2_humble/exercise.py)
    1.2 Update the Worlds and establish clear names for reusability within other applications.

3. Fix world change. Exercises like Follow Line or Autoparking (ROS2) allow changing the exercise world. To do this, you need to kill the application, visualization, and the universe and relaunch it with the new configuration.

4. Extend simple templates using the Autoparking exercise in ROS1 as a reference. The GUI modules of exercises that contain functions for the user (such as GUI.showImage()) must be adapted to be instantiated and initialized by the user code rather than the exercise template; or must be separated in two classes: one with user related methods and the other one with webserver related methods.

Unibotics:

1. Update database:
    1.1 Migrate django models and apply the same changes as in RoboticsAcademy.
    1.2 Update routes.

2. Update Frontend:
    The state of some REACT components depends on RAM messages. Update these messages based on the state machine.
