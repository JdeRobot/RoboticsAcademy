<?xml version="1.0" encoding="UTF-8"?>
<launch>
  <arg name="mav_name" default="iris"/>
  <arg name="enable_logging" default="false" />
  <arg name="enable_ground_truth" default="true" />
  <arg name="log_file" default="$(arg mav_name)" />
  <arg name="debug" default="false"/>
  <arg name="gui" default="false"/>
  <arg name="paused" default="false"/>
  <arg name="headless" default="true"/>
  <arg name="use_sim_time" value="true"/>
  <arg name="enable_camera_sensor" default="true"/>
  <arg name="enable_flashlight" default="true"/>

  <!-- The following line causes gzmsg and gzerr messages to be printed to the console
      (even when Gazebo is started through roslaunch) -->
  <arg name="verbose" default="true"/>

  <!-- The following lines simulate the world in Gazebo.  -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="/RoboticsAcademy/exercises/rescue_people/web-template/rescue_people.world" />
    <arg name="debug" value="$(arg debug)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)" />
    <arg name="verbose" value="$(arg verbose)"/>
  </include>
 
  <group ns="$(arg mav_name)">
    <!-- The following lines simulate the Iris dynamics -->
    <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
      <arg name="mav_name" value="$(arg mav_name)" />
      <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo" />
      <arg name="x" value="0.0"/>
      <arg name="y" value="0.0"/>
      <arg name="z" value="1.45"/>
      <arg name="Y" value="1.57"/>
      <arg name="enable_logging" value="$(arg enable_logging)" />
      <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
      <arg name="enable_camera_sensor" value="$(arg enable_camera_sensor)"/>
      <arg name="enable_flashlight" value="$(arg enable_flashlight)"/>

      <arg name="log_file" value="$(arg log_file)"/>
    </include>
    <!-- The Firefly position controller -->
    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="odometry_sensor1/odometry" />
    </node>
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
    <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    <!--    Drone model param   -->
    <arg name="drone_model" value="$(arg mav_name)"/>
    <param name="drone_model" type="str" value="$(arg drone_model)" />
    <param name="sample_time" type="double" value= "1.0" />
    <param name="drone_state_timer_frequency" type="double" value= "0.01" />
    <param name="misc_state_timer_frequency" type="double" value= "1.0" />

    <!--    Rotors driver node   -->
    <node name="rotors_driver_node" pkg="rotors_driver" type="rotors_driver_node.py" output="screen"/>

    <arg name="x1" default="0"/> <arg name="y1" default="0"/> <arg name="z1" default="0.1"/>
    <arg name="R1" default="0.0"/> <arg name="P1" default="0.0"/> <arg name="Y1" default="0.0"/>
    <arg name="x2" default="0"/> <arg name="y2" default="0"/> <arg name="z2" default="0.1"/>
    <arg name="R2" default="0.0"/> <arg name="P2" default="0.0"/> <arg name="Y2" default="0.0"/>
    <arg name="x3" default="0"/> <arg name="y3" default="0"/> <arg name="z3" default="0.1"/>
    <arg name="R3" default="0.0"/> <arg name="P3" default="0.0"/> <arg name="Y3" default="0.0"/>
    <arg name="x4" default="0"/> <arg name="y4" default="0"/> <arg name="z4" default="0.1"/>
    <arg name="R4" default="0.0"/> <arg name="P4" default="0.0"/> <arg name="Y4" default="0.0"/>
    <arg name="x5" default="0"/> <arg name="y5" default="0"/> <arg name="z5" default="0.1"/>
    <arg name="R5" default="0.0"/> <arg name="P5" default="0.0"/> <arg name="Y5" default="0.0"/>
    <arg name="x6" default="0"/> <arg name="y6" default="0"/> <arg name="z6" default="0.1"/>
    <arg name="R6" default="0.0"/> <arg name="P6" default="0.0"/> <arg name="Y6" default="0.0"/>

    <node name="spawn_sdf1" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face1/model.sdf -sdf -model face1 -x $(arg x1) -y $(arg y1) -z $(arg z1) -R $(arg R1) -P $(arg P1) -Y $(arg Y1)" />
    <node name="spawn_sdf2" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face2/model.sdf -sdf -model face2 -x $(arg x2) -y $(arg y2) -z $(arg z2) -R $(arg R2) -P $(arg P2) -Y $(arg Y2)" />
    <node name="spawn_sdf3" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face3/model.sdf -sdf -model face3 -x $(arg x3) -y $(arg y3) -z $(arg z3) -R $(arg R3) -P $(arg P3) -Y $(arg Y3)" />
    <node name="spawn_sdf4" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face4/model.sdf -sdf -model face4 -x $(arg x4) -y $(arg y4) -z $(arg z4) -R $(arg R4) -P $(arg P4) -Y $(arg Y4)" />
    <node name="spawn_sdf5" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face5/model.sdf -sdf -model face5 -x $(arg x5) -y $(arg y5) -z $(arg z5) -R $(arg R5) -P $(arg P5) -Y $(arg Y5)" />
    <node name="spawn_sdf6" pkg="gazebo_ros" type="spawn_model" args="-file /catkin_ws/src/drones/drone_assets/models/face6/model.sdf -sdf -model face6 -x $(arg x6) -y $(arg y6) -z $(arg z6) -R $(arg R6) -P $(arg P6) -Y $(arg Y6)" />
  </group>

  
</launch>
