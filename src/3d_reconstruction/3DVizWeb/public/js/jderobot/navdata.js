// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `navdata.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var jderobot = __M.module("jderobot");
    Slice.defineSequence(jderobot, "arrayIntHelper", "Ice.IntHelper", true);
    Slice.defineSequence(jderobot, "arrayFloatHelper", "Ice.FloatHelper", true);

    jderobot.NavdataData = Slice.defineObject(
        function(vehicle, state, batteryPercent, magX, magY, magZ, pressure, temp, windSpeed, windAngle, windCompAngle, rotX, rotY, rotZ, altd, vx, vy, vz, ax, ay, az, tagsCount, tagsType, tagsXc, tagsYc, tagsWidth, tagsHeight, tagsOrientation, tagsDistance, tm)
        {
            Ice.Object.call(this);
            this.vehicle = vehicle !== undefined ? vehicle : 0;
            this.state = state !== undefined ? state : 0;
            this.batteryPercent = batteryPercent !== undefined ? batteryPercent : 0.0;
            this.magX = magX !== undefined ? magX : 0;
            this.magY = magY !== undefined ? magY : 0;
            this.magZ = magZ !== undefined ? magZ : 0;
            this.pressure = pressure !== undefined ? pressure : 0;
            this.temp = temp !== undefined ? temp : 0;
            this.windSpeed = windSpeed !== undefined ? windSpeed : 0.0;
            this.windAngle = windAngle !== undefined ? windAngle : 0.0;
            this.windCompAngle = windCompAngle !== undefined ? windCompAngle : 0.0;
            this.rotX = rotX !== undefined ? rotX : 0.0;
            this.rotY = rotY !== undefined ? rotY : 0.0;
            this.rotZ = rotZ !== undefined ? rotZ : 0.0;
            this.altd = altd !== undefined ? altd : 0;
            this.vx = vx !== undefined ? vx : 0.0;
            this.vy = vy !== undefined ? vy : 0.0;
            this.vz = vz !== undefined ? vz : 0.0;
            this.ax = ax !== undefined ? ax : 0.0;
            this.ay = ay !== undefined ? ay : 0.0;
            this.az = az !== undefined ? az : 0.0;
            this.tagsCount = tagsCount !== undefined ? tagsCount : 0;
            this.tagsType = tagsType !== undefined ? tagsType : null;
            this.tagsXc = tagsXc !== undefined ? tagsXc : null;
            this.tagsYc = tagsYc !== undefined ? tagsYc : null;
            this.tagsWidth = tagsWidth !== undefined ? tagsWidth : null;
            this.tagsHeight = tagsHeight !== undefined ? tagsHeight : null;
            this.tagsOrientation = tagsOrientation !== undefined ? tagsOrientation : null;
            this.tagsDistance = tagsDistance !== undefined ? tagsDistance : null;
            this.tm = tm !== undefined ? tm : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::NavdataData"
        ],
        -1,
        function(__os)
        {
            __os.writeInt(this.vehicle);
            __os.writeInt(this.state);
            __os.writeFloat(this.batteryPercent);
            __os.writeInt(this.magX);
            __os.writeInt(this.magY);
            __os.writeInt(this.magZ);
            __os.writeInt(this.pressure);
            __os.writeInt(this.temp);
            __os.writeFloat(this.windSpeed);
            __os.writeFloat(this.windAngle);
            __os.writeFloat(this.windCompAngle);
            __os.writeFloat(this.rotX);
            __os.writeFloat(this.rotY);
            __os.writeFloat(this.rotZ);
            __os.writeInt(this.altd);
            __os.writeFloat(this.vx);
            __os.writeFloat(this.vy);
            __os.writeFloat(this.vz);
            __os.writeFloat(this.ax);
            __os.writeFloat(this.ay);
            __os.writeFloat(this.az);
            __os.writeInt(this.tagsCount);
            jderobot.arrayIntHelper.write(__os, this.tagsType);
            jderobot.arrayIntHelper.write(__os, this.tagsXc);
            jderobot.arrayIntHelper.write(__os, this.tagsYc);
            jderobot.arrayIntHelper.write(__os, this.tagsWidth);
            jderobot.arrayIntHelper.write(__os, this.tagsHeight);
            jderobot.arrayFloatHelper.write(__os, this.tagsOrientation);
            jderobot.arrayFloatHelper.write(__os, this.tagsDistance);
            __os.writeFloat(this.tm);
        },
        function(__is)
        {
            this.vehicle = __is.readInt();
            this.state = __is.readInt();
            this.batteryPercent = __is.readFloat();
            this.magX = __is.readInt();
            this.magY = __is.readInt();
            this.magZ = __is.readInt();
            this.pressure = __is.readInt();
            this.temp = __is.readInt();
            this.windSpeed = __is.readFloat();
            this.windAngle = __is.readFloat();
            this.windCompAngle = __is.readFloat();
            this.rotX = __is.readFloat();
            this.rotY = __is.readFloat();
            this.rotZ = __is.readFloat();
            this.altd = __is.readInt();
            this.vx = __is.readFloat();
            this.vy = __is.readFloat();
            this.vz = __is.readFloat();
            this.ax = __is.readFloat();
            this.ay = __is.readFloat();
            this.az = __is.readFloat();
            this.tagsCount = __is.readInt();
            this.tagsType = jderobot.arrayIntHelper.read(__is);
            this.tagsXc = jderobot.arrayIntHelper.read(__is);
            this.tagsYc = jderobot.arrayIntHelper.read(__is);
            this.tagsWidth = jderobot.arrayIntHelper.read(__is);
            this.tagsHeight = jderobot.arrayIntHelper.read(__is);
            this.tagsOrientation = jderobot.arrayFloatHelper.read(__is);
            this.tagsDistance = jderobot.arrayFloatHelper.read(__is);
            this.tm = __is.readFloat();
        },
        false);

    jderobot.NavdataDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.NavdataData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.NavdataData, jderobot.NavdataDataPrx);

    jderobot.Navdata = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::Navdata"
        ],
        -1, undefined, undefined, false);

    jderobot.NavdataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.Navdata.ice_staticId, undefined);

    Slice.defineOperations(jderobot.Navdata, jderobot.NavdataPrx,
    {
        "getNavdata": [, 2, 2, , , ["jderobot.NavdataData", true], , , , , true]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
