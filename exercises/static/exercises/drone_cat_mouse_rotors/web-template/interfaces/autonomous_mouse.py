#!/usr/bin/env python

from drone_wrapper import DroneWrapper
from math import sin as s
from math import cos as c
from random import uniform as u
from time import time as t

import sys

a = 0


def path_obfuscated(O00OO00O0OO00O0OO):
    global a;O0O0000O0O00O0O00=round;O0OO0OOO00OO000O0=(lambda O00O0000000O00O00,O00OO0O0O0O000O0O:(lambda OOO00OO000O0OOO0O:((lambda OO00000O000O0OOOO:3 if O0O0000O0O00O0O00(OO00000O000O0OOOO/2)%2==0 else 0)(OOO00OO000O0OOO0O),(lambda O0OOO00000000OO0O:0)(OOO00OO000O0OOO0O),(lambda O0OO0O0OOOO0O0O0O:0)(OOO00OO000O0OOO0O),(lambda O00O0O0000O000O00:0)(OOO00OO000O0OOO0O)))(O00OO0O0O0O000O0O)if O00O0000000O00O00==0 else ((lambda O0O000O00000OOO0O:((lambda OO000O0000000OO00:1)(O0O000O00000OOO0O),(lambda OO000O0000O0OOOOO:-2 if O0O0000O0O00O0O00(OO000O0000O0OOOOO/4)%2==0 else 2)(O0O000O00000OOO0O),(lambda O000O0000000OO0O0:0)(O0O000O00000OOO0O),(lambda O00OOO000OOOOO000:0)(O0O000O00000OOO0O)))(O00OO0O0O0O000O0O)if O00O0000000O00O00==1 else ((lambda O0O0O0OOOO0O0000O:((lambda O00OOO0O000OOOO00:1)(O0O0O0OOOO0O0000O),(lambda O000O000OOOO0O000:s(O000O000OOOO0O000/2)*1)(O0O0O0OOOO0O0000O),(lambda O0OOOO00O00O00O00:c(O0OOOO00O00O00O00/2)*1)(O0O0O0OOOO0O0000O),(lambda O00000O00O0OO0O00:0)(O0O0O0OOOO0O0000O)))(O00OO0O0O0O000O0O)if O00O0000000O00O00==2 else ((lambda O0OO0000000OO0OOO:((lambda OO00OOO00O000000O:1)(O0OO0000000OO0OOO),(lambda O0O0O0000OO00OOO0:0)(O0OO0000000OO0OOO),(lambda O0O0OOOOO0OOOO000 :0)(O0OO0000000OO0OOO),(lambda O0O0OOO0000OO0OOO:u(-1,1)if O0O0000O0O00O0O00(O0O0OOO0000OO0OOO/2%2,2)<=0.05 else a)(O0OO0000000OO0OOO)))(O00OO0O0O0O000O0O)if O00O0000000O00O00==3 else None))))(O00OO00O0OO00O0OO,t());a =(O0OO0OOO00OO000O0[3]if O0OO0OOO00OO000O0 is not None else 0);return O0OO0OOO00OO000O0


if __name__ == "__main__":
    path = int(sys.argv[1])

    drone = DroneWrapper()
    drone.takeoff(h=5)

    while True:
        v = path_obfuscated(path)
        if v is not None:
            vx, vy, vz, yaw = v
            drone.set_cmd_vel(vx, vy, vz, yaw)
        else:
            print("[Mouse] Path {} not available".format(path))
            break
