// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `rgbd.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var jderobot = require("image").jderobot;
    var Slice = Ice.Slice;

    jderobot.rgbData = Slice.defineStruct(
        function(color, depth)
        {
            this.color = color !== undefined ? color : null;
            this.depth = depth !== undefined ? depth : null;
        },
        false,
        function(__os)
        {
            __os.writeObject(this.color);
            __os.writeObject(this.depth);
        },
        function(__is)
        {
            var self = this;
            __is.readObject(function(__o){ self.color = __o; }, jderobot.ImageData);
            __is.readObject(function(__o){ self.depth = __o; }, jderobot.ImageData);
        },
        2, 
        false);

    jderobot.rgbd = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::rgbd"
        ],
        -1, undefined, undefined, false);

    jderobot.rgbdPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.rgbd.ice_staticId, undefined);

    Slice.defineOperations(jderobot.rgbd, jderobot.rgbdPrx,
    {
        "getData": [, 2, 2, , , [jderobot.rgbData], , , , , true]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
