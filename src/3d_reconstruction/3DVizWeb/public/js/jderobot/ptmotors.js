// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `ptmotors.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var jderobot = require("common").jderobot;
    var Slice = Ice.Slice;

    /**
     * PTMotorsData a class that contains the pantilt data
     **/
    jderobot.PTMotorsData = Slice.defineObject(
        function(pan, panSpeed, tilt, tiltSpeed)
        {
            Ice.Object.call(this);
            this.pan = pan !== undefined ? pan : 0.0;
            this.panSpeed = panSpeed !== undefined ? panSpeed : 0.0;
            this.tilt = tilt !== undefined ? tilt : 0.0;
            this.tiltSpeed = tiltSpeed !== undefined ? tiltSpeed : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::PTMotorsData"
        ],
        -1,
        function(__os)
        {
            __os.writeFloat(this.pan);
            __os.writeFloat(this.panSpeed);
            __os.writeFloat(this.tilt);
            __os.writeFloat(this.tiltSpeed);
        },
        function(__is)
        {
            this.pan = __is.readFloat();
            this.panSpeed = __is.readFloat();
            this.tilt = __is.readFloat();
            this.tiltSpeed = __is.readFloat();
        },
        false);

    jderobot.PTMotorsDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.PTMotorsData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.PTMotorsData, jderobot.PTMotorsDataPrx);

    /**
     * PTMotorsParams a class that contains the motors parametres.
     **/
    jderobot.PTMotorsParams = Slice.defineObject(
        function(maxPan, minPan, maxTilt, minTilt, maxPanSpeed, maxTiltSpeed)
        {
            Ice.Object.call(this);
            this.maxPan = maxPan !== undefined ? maxPan : 0.0;
            this.minPan = minPan !== undefined ? minPan : 0.0;
            this.maxTilt = maxTilt !== undefined ? maxTilt : 0.0;
            this.minTilt = minTilt !== undefined ? minTilt : 0.0;
            this.maxPanSpeed = maxPanSpeed !== undefined ? maxPanSpeed : 0.0;
            this.maxTiltSpeed = maxTiltSpeed !== undefined ? maxTiltSpeed : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::PTMotorsParams"
        ],
        -1,
        function(__os)
        {
            __os.writeFloat(this.maxPan);
            __os.writeFloat(this.minPan);
            __os.writeFloat(this.maxTilt);
            __os.writeFloat(this.minTilt);
            __os.writeFloat(this.maxPanSpeed);
            __os.writeFloat(this.maxTiltSpeed);
        },
        function(__is)
        {
            this.maxPan = __is.readFloat();
            this.minPan = __is.readFloat();
            this.maxTilt = __is.readFloat();
            this.minTilt = __is.readFloat();
            this.maxPanSpeed = __is.readFloat();
            this.maxTiltSpeed = __is.readFloat();
        },
        false);

    jderobot.PTMotorsParamsPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.PTMotorsParams.ice_staticId, undefined);

    Slice.defineOperations(jderobot.PTMotorsParams, jderobot.PTMotorsParamsPrx);

    /**
     * Interface to the PTMotors Actuators interaction.
     **/
    jderobot.PTMotors = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::PTMotors"
        ],
        -1, undefined, undefined, false);

    jderobot.PTMotorsPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.PTMotors.ice_staticId, undefined);

    Slice.defineOperations(jderobot.PTMotors, jderobot.PTMotorsPrx,
    {
        "setPTMotorsData": [, , , , , [3], [["jderobot.PTMotorsData", true]], , , true, ],
        "getPTMotorsParams": [, 2, 2, , , ["jderobot.PTMotorsParams", true], , , , , true]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
