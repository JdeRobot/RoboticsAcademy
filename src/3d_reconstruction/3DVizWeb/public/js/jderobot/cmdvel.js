// **********************************************************************
//
// Copyright (c) 2003-2017 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.4
//
// <auto-generated>
//
// Generated from file `cmdvel.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

(function(module, require, exports)
{
    var Ice = require("ice").Ice;
    var __M = Ice.__M;
    var Slice = Ice.Slice;

    var jderobot = __M.module("jderobot");

    jderobot.CMDVelData = Slice.defineObject(
        function(linearX, linearY, linearZ, angularX, angularY, angularZ)
        {
            Ice.Object.call(this);
            this.linearX = linearX !== undefined ? linearX : 0.0;
            this.linearY = linearY !== undefined ? linearY : 0.0;
            this.linearZ = linearZ !== undefined ? linearZ : 0.0;
            this.angularX = angularX !== undefined ? angularX : 0.0;
            this.angularY = angularY !== undefined ? angularY : 0.0;
            this.angularZ = angularZ !== undefined ? angularZ : 0.0;
        },
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::CMDVelData"
        ],
        -1,
        function(__os)
        {
            __os.writeFloat(this.linearX);
            __os.writeFloat(this.linearY);
            __os.writeFloat(this.linearZ);
            __os.writeFloat(this.angularX);
            __os.writeFloat(this.angularY);
            __os.writeFloat(this.angularZ);
        },
        function(__is)
        {
            this.linearX = __is.readFloat();
            this.linearY = __is.readFloat();
            this.linearZ = __is.readFloat();
            this.angularX = __is.readFloat();
            this.angularY = __is.readFloat();
            this.angularZ = __is.readFloat();
        },
        false);

    jderobot.CMDVelDataPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.CMDVelData.ice_staticId, undefined);

    Slice.defineOperations(jderobot.CMDVelData, jderobot.CMDVelDataPrx);

    jderobot.CMDVel = Slice.defineObject(
        undefined,
        Ice.Object, undefined, 1,
        [
            "::Ice::Object",
            "::jderobot::CMDVel"
        ],
        -1, undefined, undefined, false);

    jderobot.CMDVelPrx = Slice.defineProxy(Ice.ObjectPrx, jderobot.CMDVel.ice_staticId, undefined);

    Slice.defineOperations(jderobot.CMDVel, jderobot.CMDVelPrx,
    {
        "setCMDVelData": [, , , , , [3], [["jderobot.CMDVelData", true]], , , true, ]
    });
    exports.jderobot = jderobot;
}
(typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? module : undefined,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? require : this.Ice.__require,
 typeof(global) !== "undefined" && typeof(global.process) !== "undefined" ? exports : this));
